services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: payever
      MONGO_INITDB_ROOT_PASSWORD: 112358
    restart: unless-stopped
    networks:
      - payever-network

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: payever
      RABBITMQ_DEFAULT_PASS: 112358
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'check_running']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    networks:
      - payever-network

  payever-invoicer:
    build:
      context: .
      dockerfile: apps/payever-invoicer/Dockerfile
    container_name: invoicer
    ports:
      - '3000:3000'
    environment:
      DATABASE_URI: mongodb://payever:112358@mongo:27017/invoicer?authSource=admin
      RABBITMQ_URL: amqp://payever:112358@rabbitmq:5672
      NODE_ENV: production
      PORT: 3000
    depends_on:
      - mongo
      - rabbitmq
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - payever-network

  report-consumer:
    build:
      context: .
      dockerfile: apps/report-consumer/Dockerfile
    container_name: reporter
    environment:
      RABBITMQ_URL: amqp://payever:112358@rabbitmq:5672
    volumes:
      - ./apps/report-consumer:/app/apps/report-consumer
      - /app/apps/report-consumer/node_modules
    depends_on:
      payever-invoicer:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - payever-network

volumes:
  mongo_data:
  rabbitmq_data:

networks:
  payever-network:
    driver: bridge
